{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA,qC;;;;;;;;;;;AChCA,uG;;;;;;;;;;;;;;;;;;;;;ACA0C;AAM1C;IAAA;IAA4B,CAAC;IAAhB,YAAY;QAJxB,+DAAS,CAAC;YACT,QAAQ,EAAE,UAAU;;SAErB,CAAC;OACW,YAAY,CAAI;IAAD,mBAAC;CAAA;AAAJ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACNiC;AACjB;AAC0B;AACF;AACT;AACJ;AACL;AACyB;AACd;AAC1D,iDAAiD;AAuBjD;IACE,mBAAoB,OAAiB;QAAjB,YAAO,GAAP,OAAO,CAAU;QACnC,EAAE,CAAC,CAAC,qEAAW,CAAC,UAAU,CAAC,CAAC,CAAC;YAC3B,IAAI,CAAC,OAAO;iBACT,cAAc,EAAE;iBAChB,IAAI,CAAC,cAAM,cAAO,CAAC,GAAG,CAAC,2BAA2B,CAAC,EAAxC,CAAwC,CAAC,CAAC;QAC1D,CAAC;IACH,CAAC;IAPU,SAAS;QAtBrB,8DAAQ,CAAC;YACR,YAAY,EAAE,CAAC,2DAAY,CAAC;YAC5B,OAAO,EAAE;gBACP,2EAAmB,CAAC,QAAQ,CAAC,iBAAiB,EAAE;oBAC9C,OAAO,EAAE,qEAAW,CAAC,UAAU;iBAChC,CAAC;gBACF,uEAAa;gBACb,4DAAY,CAAC,OAAO,CAAC;oBACnB,EAAE,IAAI,EAAE,EAAE,EAAE,UAAU,EAAE,KAAK,EAAE,SAAS,EAAE,MAAM,EAAE;oBAClD,EAAE,IAAI,EAAE,KAAK,EAAE,YAAY,EAAE,qCAAqC,EAAE;oBACpE,EAAE,IAAI,EAAE,IAAI,EAAE,UAAU,EAAE,uBAAuB,EAAE,SAAS,EAAE,MAAM,EAAE;iBACvE,CAAC;gBACF,0DAAW,CAAC,OAAO,EAAE;gBACrB,qEAAgB;gBAChB,iEAAkB,CAAC,OAAO,CAAC;oBACzB,IAAI,EAAE,cAAc;iBACrB,CAAC;gBACF,4DAAY;aACb;YACD,SAAS,EAAE,CAAC,EAAE,OAAO,EAAE,kEAAkB,EAAE,QAAQ,EAAE,iEAAkB,EAAE,CAAC;YAC1E,SAAS,EAAE,CAAC,2DAAY,CAAC;SAC1B,CAAC;yCAE6B,gEAAQ;OAD1B,SAAS,CAQrB;IAAD,gBAAC;CAAA;AARqB;;;;;;;;;;;;;;AChCtB;AAAA,mFAAmF;AACnF,8FAA8F;AAC9F,yEAAyE;AACzE,gFAAgF;AAEzE,IAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;AAEF;;;;;GAKG;AACH,mEAAmE;;;;;;;;;;;;;;;;;;ACfpB;AAC4B;AAE9B;AACY;AAEzD,EAAE,CAAC,CAAC,qEAAW,CAAC,UAAU,CAAC,CAAC,CAAC;IAC3B,oEAAc,EAAE,CAAC;AACnB,CAAC;AAED,QAAQ,CAAC,gBAAgB,CAAC,kBAAkB,EAAE;IAC5C,gGAAsB,EAAE;SACrB,eAAe,CAAC,yDAAS,CAAC;SAC1B,KAAK,CAAC,aAAG,IAAI,cAAO,CAAC,GAAG,CAAC,GAAG,CAAC,EAAhB,CAAgB,CAAC,CAAC;AACpC,CAAC,CAAC,CAAC","file":"main.js","sourcesContent":["var map = {\n\t\"../search/search.module\": [\n\t\t\"./src/app/pages/search/search.module.ts\",\n\t\t\"search-search-module\"\n\t],\n\t\"../track-detail/track-detail.module\": [\n\t\t\"./src/app/pages/track-detail/track-detail.module.ts\",\n\t\t\"track-detail-track-detail-module\"\n\t],\n\t\"./pages/menu/menu.module\": [\n\t\t\"./src/app/pages/menu/menu.module.ts\",\n\t\t\"pages-menu-menu-module\"\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tvar ids = map[req];\n\tif(!ids) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\tvar module = __webpack_require__(ids[0]);\n\t\treturn module;\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";\nmodule.exports = webpackAsyncContext;","module.exports = \"<ion-app>\\n  <ion-router-outlet animate=\\\"false\\\"></ion-router-outlet>\\n</ion-app>\\n\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: 'app.component.html'\n})\nexport class AppComponent { }\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { RouteReuseStrategy, RouterModule } from '@angular/router';\nimport { IonicModule, IonicRouteStrategy } from '@ionic/angular';\nimport { HttpClientModule } from '@angular/common/http';\nimport { IonicStorageModule } from '@ionic/storage';\nimport { AppComponent } from './app.component';\nimport { ServiceWorkerModule, SwUpdate } from '@angular/service-worker';\nimport { environment } from '../environments/environment';\n// .withServerTransition({ appId: 'serverApp' }),\n@NgModule({\n  declarations: [AppComponent],\n  imports: [\n    ServiceWorkerModule.register('/ngsw-worker.js', {\n      enabled: environment.production\n    }),\n    BrowserModule,\n    RouterModule.forRoot([\n      { path: '', redirectTo: 'app', pathMatch: 'full' },\n      { path: 'app', loadChildren: './pages/menu/menu.module#MenuModule' },\n      { path: '**', redirectTo: '/app/detail/299608205', pathMatch: 'full' }\n    ]),\n    IonicModule.forRoot(),\n    HttpClientModule,\n    IonicStorageModule.forRoot({\n      name: '__startTrack'\n    }),\n    RouterModule\n  ],\n  providers: [{ provide: RouteReuseStrategy, useClass: IonicRouteStrategy }],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {\n  constructor(private updates: SwUpdate) {\n    if (environment.production) {\n      this.updates\n        .activateUpdate()\n        .then(() => console.log('updated in the background'));\n    }\n  }\n}\n","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `.angular-cli.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\ndocument.addEventListener('DOMContentLoaded', () => {\n  platformBrowserDynamic()\n    .bootstrapModule(AppModule)\n    .catch(err => console.log(err));\n});\n"],"sourceRoot":""}